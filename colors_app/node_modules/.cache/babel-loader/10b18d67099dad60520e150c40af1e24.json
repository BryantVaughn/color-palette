{"ast":null,"code":"var _jsxFileName = \"/Users/bryant/Desktop/React/Color-Project/colors-app/src/ColorBox.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\nimport './ColorBox.css';\nconst styles = {\n  colorBox: {\n    width: \"20%\",\n    height: \"25%\",\n    margin: \"0 auto\",\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    marginBottom: \"-3.5px\",\n    \"&:hover button\": {\n      transition: \"0.3s ease-in-out\",\n      opacity: 1\n    }\n  },\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.68 ? \"black\" : \"white\"\n  },\n  colorName: {\n    color: props => chroma(props.background).luminance() <= 0.19 ? \"white\" : \"rgba(0,0,0,0.5)\"\n  },\n  seeMore: {\n    color: props => chroma(props.background).luminance() >= 0.68 ? \"rgba(0,0,0,0.5)\" : \"white\",\n    background: \"rgba(255, 255, 255, 0.3)\",\n    position: \"absolute\",\n    border: \"none\",\n    right: \"0px\",\n    bottom: \"0px\",\n    width: \"60px\",\n    height: \"30px\",\n    textAlign: \"center\",\n    lineHeight: \"30px\",\n    textTransform: \"uppercase\"\n  },\n  copyButton: {\n    color: props => chroma(props.background).luminance() >= 0.68 ? \"rgba(0,0,0,0.5)\" : \"white\",\n    width: \"100px\",\n    height: \"30px\",\n    position: \"absolute\",\n    display: \"inline-block\",\n    top: \"50%\",\n    left: \"50%\",\n    marginLeft: \"-50px\",\n    marginTop: \"-15px\",\n    textAlign: \"center\",\n    outline: \"none\",\n    background: \"rgba(255, 255, 255, 0.3)\",\n    fontSize: \"1rem\",\n    lineHeight: \"30px\",\n    textTransform: \"uppercase\",\n    border: \"none\",\n    textDecoration: \"none\",\n    opacity: 0\n  }\n};\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.changeCopyState = this.changeCopyState.bind(this);\n  }\n\n  changeCopyState() {\n    this.setState({\n      copied: true\n    }, () => {\n      setTimeout(() => this.setState({\n        copied: false\n      }), 1500);\n    });\n  }\n\n  render() {\n    const {\n      name,\n      background,\n      moreUrl,\n      showingFullPalette,\n      classes\n    } = this.props;\n    const {\n      copied\n    } = this.state;\n    const isLightColor = chroma(background).luminance() >= 0.65;\n    const btnClassStr = isLightColor ? \"copy-button dark-text\" : \"copy-button\";\n    return /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: background,\n      onCopy: this.changeCopyState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: background\n      },\n      className: classes.colorBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background\n      },\n      className: `copy-overlay ${copied && \"show\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `copy-msg ${copied && \"show\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"copied!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.copyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, this.props.background)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"copy-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, name, chroma(background).luminance())), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.copyButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Copy\")), showingFullPalette && /*#__PURE__*/React.createElement(Link, {\n      to: moreUrl,\n      onClick: evt => evt.stopPropagation(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.seeMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"More\"))));\n  }\n\n}\n\nexport default withStyles(styles)(ColorBox);","map":{"version":3,"sources":["/Users/bryant/Desktop/React/Color-Project/colors-app/src/ColorBox.js"],"names":["React","Component","Link","CopyToClipboard","chroma","withStyles","styles","colorBox","width","height","margin","display","position","cursor","marginBottom","transition","opacity","copyText","color","props","background","luminance","colorName","seeMore","border","right","bottom","textAlign","lineHeight","textTransform","copyButton","top","left","marginLeft","marginTop","outline","fontSize","textDecoration","ColorBox","constructor","state","copied","changeCopyState","bind","setState","setTimeout","render","name","moreUrl","showingFullPalette","classes","isLightColor","btnClassStr","evt","stopPropagation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\nimport './ColorBox.css';\n\nconst styles = {\n  colorBox: {\n    width: \"20%\",\n    height: \"25%\",\n    margin: \"0 auto\",\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    marginBottom: \"-3.5px\",\n    \"&:hover button\": {\n      transition: \"0.3s ease-in-out\",\n      opacity: 1\n    }\n  },\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.68 ? \"black\" : \"white\"\n  },\n  colorName: {\n    color: props => chroma(props.background).luminance() <= 0.19 ? \"white\" : \"rgba(0,0,0,0.5)\"\n  },\n  seeMore: {\n    color: props => chroma(props.background).luminance() >= 0.68 ? \"rgba(0,0,0,0.5)\" : \"white\",\n    background: \"rgba(255, 255, 255, 0.3)\",\n    position: \"absolute\",\n    border: \"none\",\n    right: \"0px\",\n    bottom: \"0px\",\n    width: \"60px\",\n    height: \"30px\",\n    textAlign: \"center\",\n    lineHeight: \"30px\",\n    textTransform: \"uppercase\"\n  },\n  copyButton: {\n    color: props => chroma(props.background).luminance() >= 0.68 ? \"rgba(0,0,0,0.5)\" : \"white\",\n    width: \"100px\",\n    height: \"30px\",\n    position: \"absolute\",\n    display: \"inline-block\",\n    top: \"50%\",\n    left: \"50%\",\n    marginLeft: \"-50px\",\n    marginTop: \"-15px\",\n    textAlign: \"center\",\n    outline: \"none\",\n    background: \"rgba(255, 255, 255, 0.3)\",\n    fontSize: \"1rem\",\n    lineHeight: \"30px\",\n    textTransform: \"uppercase\",\n    border: \"none\",\n    textDecoration: \"none\",\n    opacity: 0\n  }\n};\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.changeCopyState = this.changeCopyState.bind(this);\n  }\n\n  changeCopyState() {\n    this.setState({ copied: true }, () => {\n      setTimeout(() => this.setState({ copied: false }), 1500);\n    });\n  }\n\n  render() {\n    const { name, background, moreUrl, showingFullPalette, classes } = this.props;\n    const { copied } = this.state;\n    const isLightColor = chroma(background).luminance() >= 0.65;\n    const btnClassStr = isLightColor ? \"copy-button dark-text\" : \"copy-button\";\n\n    return (\n      <CopyToClipboard\n        text={ background }\n        onCopy={ this.changeCopyState }\n      >\n        <div\n          style={{ background: background }}\n          className={ classes.colorBox }\n        >\n          <div\n            style={{ background }}\n            className={ `copy-overlay ${ copied && \"show\" }`}\n          />\n          <div className={ `copy-msg ${ copied && \"show\"}`}>\n            <h1>copied!</h1>\n            <p className={ classes.copyText }>\n              { this.props.background }\n            </p>\n          </div>\n          <div className=\"copy-container\">\n            <div className=\"box-content\">\n              <span className={ classes.colorName }>\n                { name }\n                { chroma(background).luminance() }\n              </span>\n            </div>\n            <button className={ classes.copyButton }>\n              Copy\n            </button>\n          </div>\n          { showingFullPalette && (\n            <Link\n              to={ moreUrl }\n              onClick={ evt => evt.stopPropagation() }\n            >\n              <span className={ classes.seeMore }>\n                More\n              </span>\n            </Link>\n          )}\n        </div>\n      </CopyToClipboard>\n    );\n  }\n}\n\nexport default withStyles(styles)(ColorBox);\n"]},"metadata":{},"sourceType":"module"}