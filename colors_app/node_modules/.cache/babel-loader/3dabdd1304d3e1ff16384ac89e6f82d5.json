{"ast":null,"code":"var _jsxFileName = \"/Users/bryant/Desktop/React/Color-Project/colors-app/src/PaletteMetaForm.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nclass PaletteMetaForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n        paletteName\n      }) => paletteName.toLowerCase() !== value.toLowerCase()));\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false,\n      newPaletteName: \"\"\n    };\n  }\n\n  render() {\n    const {\n      open,\n      newPaletteName\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Dialog, {\n      open: open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Choose a Palette Name\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: () => this.props.handleSubmit(newPaletteName),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Please enter a name for your new beautiful palette. Make sure it's unique!\"), /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Palette Name\",\n      name: \"newPaletteName\",\n      fullWidth: true,\n      margin: \"normal\",\n      value: newPaletteName,\n      onChange: this.handleChange,\n      validators: [\"required\", \"isPaletteNameUnique\"],\n      errorMessages: [\"Palette name required\", \"Name already used\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Save Palette\"))));\n  }\n\n}\n\nexport default PaletteMetaForm;","map":{"version":3,"sources":["/Users/bryant/Desktop/React/Color-Project/colors-app/src/PaletteMetaForm.js"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","PaletteMetaForm","constructor","props","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","handleChange","evt","setState","target","name","handleClickOpen","open","handleClose","state","newPaletteName","render","handleSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nclass PaletteMetaForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      newPaletteName: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n      this.props.palettes.every(\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\n      )\n    );\n  };\n\n  handleChange = (evt) => {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open, newPaletteName } = this.state;\n\n    return (\n        <Dialog\n          open={ open }\n          onClose={ this.handleClose }\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Choose a Palette Name</DialogTitle>\n          <ValidatorForm onSubmit={ () => this.props.handleSubmit(newPaletteName) }>\n            <DialogContent>\n              <DialogContentText>\n                Please enter a name for your new beautiful palette. Make sure it's unique!\n              </DialogContentText>\n              <TextValidator\n                label=\"Palette Name\"\n                name=\"newPaletteName\"\n                fullWidth\n                margin=\"normal\"\n                value={ newPaletteName }\n                onChange={ this.handleChange }\n                validators={ [\"required\", \"isPaletteNameUnique\"] }\n                errorMessages={ [\"Palette name required\", \"Name already used\"] }\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={ this.handleClose }\n                color=\"primary\"\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n              >\n                Save Palette\n              </Button>\n            </DialogActions>\n          </ValidatorForm>\n        </Dialog>\n    );\n  }\n}\n\nexport default PaletteMetaForm;"]},"metadata":{},"sourceType":"module"}