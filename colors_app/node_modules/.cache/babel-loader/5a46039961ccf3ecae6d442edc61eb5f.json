{"ast":null,"code":"var _jsxFileName = \"/Users/bryant/Desktop/React/Color-Project/colors-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Palette from './Palette';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.findPalette = id => {\n      return this.state.palettes.find(function (palette) {\n        return palette.id === id;\n      });\n    };\n\n    this.savePalette = newPalette => {\n      this.setState({\n        palettes: [...this.state.palettes, newPalette]\n      }, this.syncLocalStorage);\n    };\n\n    this.deletePalette = id => {\n      this.setState(st => ({\n        palettes: st.palettes.filter(palette => palette.id !== id)\n      }), this.syncLocalStorage);\n    };\n\n    this.syncLocalStorage = () => {\n      window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n    };\n\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/palette/new\",\n      render: routeProps => /*#__PURE__*/React.createElement(NewPaletteForm, Object.assign({}, routeProps, {\n        palettes: this.state.palettes,\n        savePalette: this.savePalette,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/palette/:paletteId/:colorId\",\n      render: routeProps => /*#__PURE__*/React.createElement(SingleColorPalette, {\n        colorId: routeProps.match.params.colorId,\n        palette: generatePalette(this.findPalette(routeProps.match.params.paletteId)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routeProps => /*#__PURE__*/React.createElement(PaletteList, Object.assign({\n        palettes: this.state.palettes\n      }, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/palette/:id\",\n      render: routeProps => /*#__PURE__*/React.createElement(Palette, {\n        palette: generatePalette(this.findPalette(routeProps.match.params.id)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bryant/Desktop/React/Color-Project/colors-app/src/App.js"],"names":["React","Component","Route","Switch","Palette","PaletteList","SingleColorPalette","NewPaletteForm","seedColors","generatePalette","App","constructor","props","findPalette","id","state","palettes","find","palette","savePalette","newPalette","setState","syncLocalStorage","deletePalette","st","filter","window","localStorage","setItem","JSON","stringify","savedPalettes","parse","getItem","render","routeProps","match","params","colorId","paletteId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Palette from './Palette';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport NewPaletteForm from './NewPaletteForm';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n  }\n\n  findPalette = (id) => {\n    return this.state.palettes.find(function(palette) {\n      return palette.id === id;\n    });\n  };\n\n  savePalette = (newPalette) => {\n    this.setState({ palettes: [...this.state.palettes, newPalette] }, \n      this.syncLocalStorage\n    );\n  };\n\n  deletePalette = (id) => {\n    this.setState(\n      st => ({ palettes: st.palettes.filter(palette => palette.id !== id)}),\n      this.syncLocalStorage\n    );\n  };\n\n  syncLocalStorage = () => {\n    window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n  };\n\n  render() {\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/palette/new\"\n          render={ routeProps => \n            <NewPaletteForm\n              { ...routeProps }\n              palettes={ this.state.palettes }\n              savePalette={ this.savePalette }\n            />\n          }\n        />\n        <Route\n          path=\"/palette/:paletteId/:colorId\"\n          render={ routeProps => (\n            <SingleColorPalette\n              colorId={ routeProps.match.params.colorId }\n              palette={ generatePalette(\n                this.findPalette(routeProps.match.params.paletteId)\n              )}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/\"\n          render={ routeProps => (\n            <PaletteList\n              palettes={ this.state.palettes } \n              { ...routeProps }\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/palette/:id\"\n          render={ routeProps => (\n            <Palette\n              palette={ generatePalette(\n                this.findPalette(routeProps.match.params.id)\n              )}\n            />\n          )}\n        />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}