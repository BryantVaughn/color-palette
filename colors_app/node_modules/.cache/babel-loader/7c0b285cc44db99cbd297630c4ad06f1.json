{"ast":null,"code":"var _jsxFileName = \"/Users/bryant/Desktop/React/Color-Project/colors-app/src/Navbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport './Navbar.css';\nconst styles = {\n  navbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: \"6vh\"\n  },\n  logo: {\n    marginRight: \"15px\",\n    padding: \"0 13px\",\n    fontSize: \"22px\",\n    backgroundColor: \"#eceff1\",\n    fontFamily: \"Roboto\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"black\"\n    }\n  },\n  slider: {\n    width: \"340px\",\n    margin: \"0 10px\",\n    display: \"inline-block\"\n  }\n};\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"hex\",\n      open: false\n    };\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n\n  handleFormatChange(evt) {\n    this.setState({\n      format: evt.target.value,\n      open: true\n    });\n    this.props.handleChange(evt.target.value);\n  }\n\n  closeSnackbar() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const {\n      level,\n      changeLevel,\n      showingAllColors,\n      classes\n    } = this.props;\n    const {\n      format,\n      open\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      className: classes.navbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"reactcolorpicker\")), showingAllColors && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Level: \", level), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      defaultValue: level,\n      min: 100,\n      max: 900,\n      step: 100,\n      onAfterChange: changeLevel,\n      trackStyle: {\n        backgroundColor: \"transparent\"\n      },\n      handleStyle: {\n        backgroundColor: \"green\",\n        outline: \"none\",\n        border: \"2px solid green\",\n        boxShadow: \"none\",\n        width: \"13px\",\n        height: \"13px\",\n        marginLeft: \"-1px\",\n        marginTop: \"-3px\"\n      },\n      railStyle: {\n        height: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: format,\n      onChange: this.handleFormatChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"hex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"HEX - #ffffff\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"rgb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"RGB - rgb(255,255,255)\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"rgba\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, \"RGBA - rgba(255,255,255, 1.0)\"))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: open,\n      autoHideDuration: 3000,\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, \"Format Changed to \", format.toUpperCase()),\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      onClose: this.closeSnackbar,\n      action: [/*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.closeSnackbar,\n        color: \"inherit\",\n        key: \"close\",\n        \"aria-label\": \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/bryant/Desktop/React/Color-Project/colors-app/src/Navbar.js"],"names":["React","Component","Link","Select","MenuItem","Snackbar","IconButton","CloseIcon","Slider","styles","navbar","display","alignItems","justifyContent","height","logo","marginRight","padding","fontSize","backgroundColor","fontFamily","textDecoration","color","slider","width","margin","Navbar","constructor","props","state","format","open","handleFormatChange","bind","closeSnackbar","evt","setState","target","value","handleChange","render","level","changeLevel","showingAllColors","classes","outline","border","boxShadow","marginLeft","marginTop","vertical","horizontal","toUpperCase"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport './Navbar.css';\n\nconst styles = {\n  navbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: \"6vh\"\n  },\n  logo: {\n    marginRight: \"15px\",\n    padding: \"0 13px\",\n    fontSize: \"22px\",\n    backgroundColor: \"#eceff1\",\n    fontFamily: \"Roboto\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"black\"\n    }\n  },\n  slider: {\n    width: \"340px\",\n    margin: \"0 10px\",\n    display: \"inline-block\"\n  }\n};\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"hex\",\n      open: false\n    };\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n\n  handleFormatChange(evt) {\n    this.setState({ format: evt.target.value, open: true });\n    this.props.handleChange(evt.target.value);\n  }\n\n  closeSnackbar() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const { level, changeLevel, showingAllColors, classes } = this.props;\n    const { format, open } = this.state;\n\n    return (\n      <header className={ classes.navbar }>\n        <div className=\"logo\">\n          <Link to=\"/\">reactcolorpicker</Link>\n        </div>\n        { showingAllColors && (\n          <div className=\"slider-container\">\n            <span>Level: { level }</span>\n            <div className=\"slider\">\n              <Slider\n                defaultValue={ level }\n                min={ 100 }\n                max={ 900 }\n                step={ 100 }\n                onAfterChange={ changeLevel }\n                trackStyle={{ backgroundColor: \"transparent\" }}\n                handleStyle={{\n                  backgroundColor: \"green\",\n                  outline: \"none\",\n                  border: \"2px solid green\",\n                  boxShadow: \"none\",\n                  width: \"13px\",\n                  height: \"13px\",\n                  marginLeft: \"-1px\", \n                  marginTop: \"-3px\"\n                }}\n                railStyle={{ height: 8 }}\n              />\n            </div>\n          </div>\n        )}\n        <div className=\"select-container\">\n          <Select value={ format } onChange={ this.handleFormatChange }>\n            <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\n            <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n            <MenuItem value=\"rgba\">RGBA - rgba(255,255,255, 1.0)</MenuItem>\n          </Select>\n        </div>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\"}}\n          open={ open }\n          autoHideDuration={ 3000 }\n          message={\n            <span id=\"message-id\">\n              Format Changed to { format.toUpperCase() }\n            </span>\n          }\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          onClose={ this.closeSnackbar }\n          action={[\n            <IconButton\n              onClick={ this.closeSnackbar }\n              color=\"inherit\"\n              key=\"close\" \n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </header>\n    );\n  }\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}